@import 'variables.css';

/* Card styles */
.option-card {
    background: var(--card-background);
    border-radius: 10px;
    padding: 15px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    position: relative;
    overflow: hidden;
    min-height: 300px;
    height: auto;
    border: 1px solid transparent;
    transition: transform 0.2s ease, border-color 0.2s ease;
    will-change: transform, border-color;
    transform: translateZ(0);
    backface-visibility: hidden;
    contain: layout style paint;
}

.option-card:hover {
    transform: translateY(-2px);
    border-color: var(--theme-color);
}

.option-card.active {
    border-color: var(--theme-color);
    background: linear-gradient(
        to bottom right,
        rgba(var(--accent-color-rgb), 0.1),
        transparent
    );
}

.option-card h2 {
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 20px;
    font-weight: 600;
    color: var(--text);
    contain: content;
}

.option-card h2 i {
    font-size: 20px;
    opacity: 0.8;
}

.option-card p {
    font-size: 14px;
    color: var(--text-secondary);
    margin-bottom: 10px;
    overflow-y: auto;
    max-height: 80px;
    line-height: 1.4;
    flex-shrink: 0;
    padding-right: 8px;
    -webkit-overflow-scrolling: touch;
    contain: content;
}

.option-card p::-webkit-scrollbar {
    width: 4px;
}

.option-card p::-webkit-scrollbar-track {
    background: transparent;
}

.option-card p::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 2px;
}

.option-card.generating {
    position: relative;
}

.option-card.generating::before {
    content: '';
    position: absolute;
    inset: -1px;
    background: linear-gradient(90deg, 
        var(--accent-color-1, #ff0000), 
        var(--accent-color-2, #00ff00), 
        var(--accent-color-1, #ff0000)
    );
    background-size: 200% 100%;
    animation: borderMove 2s linear infinite;
    z-index: -1;
    border-radius: 10px;
    -webkit-mask: 
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
}

/* Card hover effect */
.option-card::after {
    content: '';
    position: absolute;
    inset: 0;
    background: radial-gradient(
        600px circle at var(--mouse-x, 0) var(--mouse-y, 0),
        rgba(255, 255, 255, 0.06),
        transparent 40%
    );
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
    z-index: 1;
}

.option-card:hover::after {
    opacity: 1;
}

/* Options grid */
.options-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: 25px;
    padding: 5px;
    margin: 0 auto;
    width: 100%;
    max-width: 1400px;
}

.options-grid::-webkit-scrollbar {
    width: 8px;
}

.options-grid::-webkit-scrollbar-track {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 4px;
    border: none;
}

.options-grid::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.2);
    border-radius: 4px;
    border: none;
}

.options-grid::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.3);
}

/* Style cards */
.style-card {
    background: var(--card-background);
    border: 1px solid transparent;
    border-radius: 10px;
    padding: 20px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    position: relative;
    overflow: hidden;
    min-height: 400px;
    transform: translateY(0);
    transition: all 0.3s ease;
    box-shadow:
        0 4px 6px -1px rgba(0, 0, 0, 0.1),
        0 2px 4px -1px rgba(0, 0, 0, 0.06);
}

.style-card::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(
        160deg,
        transparent 0%,
        rgba(var(--theme-color-rgb), 0.05) 100%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
}

.style-card:hover {
    transform: translateY(-8px);
    box-shadow:
        0 20px 25px -5px rgba(0, 0, 0, 0.2),
        0 10px 10px -5px rgba(0, 0, 0, 0.1);
    border-color: var(--theme-color);
}

.style-card:hover::after {
    opacity: 1;
}

.style-card .style-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 12px;
}

.style-card .style-title {
    display: flex;
    align-items: center;
    gap: 8px;
}

.style-card .style-title i {
    font-size: 16px;
    color: var(--theme-color);
    width: 20px;
    height: 20px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.style-card .style-name {
    font-size: 16px;
    font-weight: 600;
    color: var(--text);
    margin: 0;
}

/* Ensure proper interaction */
.style-card .style-header,
.style-card .prompt-container,
.style-card .prompt-text,
.style-card .prompt-actions,
.style-card button,
.style-card input {
    position: relative;
    z-index: 1;
}

.style-card-controls {
    position: relative;
    z-index: 2;
}

.style-card:hover::before {
    opacity: 1;
}

/* Enhanced interactivity */
.style-card {
    transform-origin: center bottom;
}

.style-card .style-header {
    transition: transform 0.3s ease;
}

.style-card:hover .style-header {
    transform: translateY(-2px);
}

.style-card button,
.style-card .action-btn,
.style-card .favorite-btn,
.style-card input[type="checkbox"] {
    transition: transform 0.2s ease;
}

.style-card button:hover,
.style-card .action-btn:hover,
.style-card .favorite-btn:hover {
    transform: translateY(-1px);
}

.style-card input[type="checkbox"]:hover {
    transform: scale(1.05);
}

.style-card input[type="checkbox"] {
    appearance: none;
    width: 40px;
    height: 24px;
    background: var(--theme-color-back);
    border: none;
    border-radius: 12px;
    position: relative;
    cursor: pointer;
    transition: all 0.3s ease;
    top: 2px;
    left: 2px;
}

.style-card input[type="checkbox"]::after {
    content: '';
    position: absolute;
    width: 18px;
    height: 18px;
    background: white;
    border-radius: 50%;
    border: none;
    top: 2px;
    left: 2px;
    transition: all 0.3s ease;
}

.style-card input[type="checkbox"]:checked {
    background: var(--theme-color);
    border: 1px solid var(--theme-color);
    top: 2px;
    left: 2px;
}

.style-card input[type="checkbox"]:checked::after {
    transform: translateX(16px);
    top: 2px;
    left: 2px;
}

.style-card.generating {
    position: relative;
}

.style-card.generating::before {
    content: '';
    position: absolute;
    inset: -1px;
    background: linear-gradient(90deg, 
        var(--accent-color-1, #ff0000), 
        var(--accent-color-2, #00ff00), 
        var(--accent-color-1, #ff0000)
    );
    background-size: 200% 100%;
    animation: borderMove 2s linear infinite;
    z-index: -1;
    border-radius: 10px;
    border: none;
    -webkit-mask: 
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
    mask-composite: exclude;
}

.style-card .description {
    font-size: 14px;
    color: var(--text-secondary);
    line-height: 1.5;
    margin: 0;
}

.style-card .prompt-text {
    font-size: 14px;
    color: var(--text);
    line-height: 1.6;
    margin: 0;
}

.style-card .button-group {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 10px;
    padding: 0 10px;
    margin-top: auto;
    position: relative;
    z-index: 3;
    isolation: isolate;
}

.style-card .action-btn {
    position: relative;
    z-index: 3;
}

/* Ensure proper layering in style cards */
.style-card {
    isolation: isolate;
    position: relative;
    z-index: 1;
}

.style-card .button-group,
.style-card .action-btn,
.style-card .style-header {
    position: relative;
    z-index: 3;
}

.style-card .prompt-container {
    position: relative;
    z-index: 2;
    isolation: isolate;
}

.style-card .prompt-text {
    position: relative;
    z-index: 1;
    pointer-events: auto;
}

.style-card .prompt-output {
    position: relative;
    z-index: 1;
}

.style-card .prompt-container {
    position: relative;
    flex: 1;
    min-height: 100px;
    max-height: 400px;
    overflow: visible;
    margin: 10px 0;
    pointer-events: auto;
}

.style-card .prompt-container > * {
    pointer-events: auto;
}

.style-card .prompt-text {
    position: relative;
    z-index: 1;
    pointer-events: auto;
    overflow-y: auto !important;
    -webkit-overflow-scrolling: touch;
    touch-action: pan-y;
    user-select: text;
}

.prompt-text {
    font-family: var(--font-mono);
    font-size: 14px;
    line-height: 1.6;
    color: var(--text);
    background: var(--card-background-secondary);
    border-radius: 8px;
    padding: 15px;
    overflow-y: auto;
    height: 100%;
    min-height: 100px;
    max-height: 400px;
    white-space: normal;
    word-break: break-word;
    mask-image: linear-gradient(to bottom, 
        black calc(100% - 32px),
        transparent 100%
    );
    -webkit-mask-image: linear-gradient(to bottom, 
        black calc(100% - 32px),
        transparent 100%
    );
}

.prompt-text::-webkit-scrollbar {
    width: 6px;
}

.prompt-text::-webkit-scrollbar-track {
    background: transparent;
}

.prompt-text::-webkit-scrollbar-thumb {
    background: rgba(255, 255, 255, 0.1);
    border-radius: 3px;
}

.prompt-text::-webkit-scrollbar-thumb:hover {
    background: rgba(255, 255, 255, 0.2);
}

.style-card .prompt-text {
    position: relative;
    z-index: 1;
    pointer-events: auto !important;
    overflow-y: auto !important;
    -webkit-overflow-scrolling: touch;
    touch-action: pan-y;
    user-select: text;
}

.prompt-text.error {
    color: var(--error);
    background: var(--error-background);
}

/* Responsiveness */
@media (max-width: 768px) {
    .options-grid {
        grid-template-columns: 1fr;
        padding: 5px 20px;
    }
}
